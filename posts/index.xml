<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on ESG's</title><link>https://esg.dev/posts/</link><description>Recent content in Posts on ESG's</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 16 Apr 2020 14:17:03 -0400</lastBuildDate><atom:link href="https://esg.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Let's Encrypt with Azure CDN</title><link>https://esg.dev/posts/letsencrypt-on-azurecdn/</link><pubDate>Thu, 16 Apr 2020 14:17:03 -0400</pubDate><guid>https://esg.dev/posts/letsencrypt-on-azurecdn/</guid><description>As I was in the process of moving this blog from AWS to Azure, I found myself in an interesting position.
Azure CDN can provision a certificate for HTTPS on its own, unless you are using the root domain (ex: esg.dev), in which case you need to provide your own.
I figured the cheapest way would be to use Let&amp;rsquo;s Encrypt, since it&amp;rsquo;s free. And Azure already supports it.
Or does it?</description></item><item><title>Introduction to Action Constraints in ASP.NET Core</title><link>https://esg.dev/posts/introduction-to-action-constraints/</link><pubDate>Mon, 02 Dec 2019 18:45:08 -0500</pubDate><guid>https://esg.dev/posts/introduction-to-action-constraints/</guid><description>Ever had to integrate a 3rd party webhook into your application, only to realize that they won&amp;rsquo;t let you configure a different address for each type of events?
A few years ago, I had to do just that for Github webhooks. Thankfully, they provide a HTTP header that describe the type of event being sent.
At the time, I used a middleware to modify the route, but there are cleaner solutions out there.</description></item><item><title>On Terraform</title><link>https://esg.dev/posts/on-terraform/</link><pubDate>Sat, 21 Sep 2019 19:57:59 -0400</pubDate><guid>https://esg.dev/posts/on-terraform/</guid><description>Terraform is a great tool. While I&amp;rsquo;m not super found of YAML, the syntax allows for organizing your infrastructure in a clean way.
As as they say, cleanliness is Godliness.
However, there is something that I was was more explicit in the guides and tutorials I was following.
State management in Terraform Terraform keeps track of whatever action was applied through it&amp;rsquo;s state. By default, this state is stored on your local drive where your templates are stored.</description></item></channel></rss>